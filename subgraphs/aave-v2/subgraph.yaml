specVersion: 0.0.2
description: Aave is a decentralized non-custodial liquidity protocol where users can participate as depositors or borrowers.
repository: https://github.com/ekonomia-tech/lending-subgraph-standard
schema:
  file: ../../schema.graphql
dataSources:
  - kind: ethereum/contract
    name: LendingPoolAddressesProviderRegistry
    network: mainnet
    source:
      address: "0x52D306e36E3B6B02c153d0266ff0f85d18BCD413"
      abi: LendingPoolAddressesProviderRegistry
      startBlock: 11360900
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/lendingPoolAddressesProviderRegistry.ts
      entities:
        - LendingPoolAddressesProviderRegistry
      abis:
        - name: LendingPoolAddressesProviderRegistry
          file: ./abis/LendingPoolAddressesProviderRegistry.json
        - name: ERC20
          file: ./abis/erc20.json
      eventHandlers:
        - event: AddressesProviderRegistered(indexed address)
          handler: handleAddressesProviderRegistered
templates:
  - name: LendingPoolAddressesProvider
    kind: ethereum/contract
    network: mainnet
    source:
      abi: LendingPoolAddressesProvider
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/lendingPoolAddressesProvider.ts
      entities:
        - LendingPoolAddressesProvider
      abis:
        - name: LendingPoolAddressesProvider
          file: ./abis/LendingPoolAddressesProvider.json
        - name: ERC20
          file: ./abis/erc20.json
      eventHandlers:
        - event: ProxyCreated(bytes32,indexed address)
          handler: handleProxyCreated
        - event: LendingPoolConfiguratorUpdated(indexed address)
          handler: handlePoolConfiguratorUpdated
  - name: LendingPoolConfigurator
    kind: ethereum/contract
    network: mainnet
    source:
      abi: LendingPoolConfigurator
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/lendingPoolConfigurator.ts
      entities:
        - LendingPoolConfigurator
      abis:
        - name: LendingPoolConfigurator
          file: ./abis/LendingPoolConfigurator.json
        - name: ERC20
          file: ./abis/erc20.json
      eventHandlers:
        - event: ReserveInitialized(indexed address,indexed address,address,address,address)
          handler: handleReserveInitialized
  - name: LendingPool
    kind: ethereum/contract
    network: mainnet
    source:
      abi: LendingPool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mappings/lendingPool.ts
      entities:
        - LendingPool
      abis:
        - name: LendingPool
          file: ./abis/LendingPool.json
        - name: ERC20
          file: ./abis/erc20.json

        - name: _ERC20
          file: ./abis/Prices/ERC20.json
        # Curve Contracts
        - name: CurveRegistry
          file: ./abis/Prices/Curve/Registry.json
        - name: CalculationsCurve
          file: ./abis/Prices/Calculations/Curve.json
        # YearnLens Contracts
        - name: YearnLensContract
          file: ./abis/Prices/YearnLens.json
        # ChainLink Contracts
        - name: ChainLinkContract
          file: ./abis/Prices/ChainLink.json
        # Uniswap Contracts
        - name: UniswapRouter
          file: ./abis/Prices/Uniswap/Router.json
        - name: UniswapFactory
          file: ./abis/Prices/Uniswap/Factory.json
        - name: UniswapPair
          file: ./abis/Prices/Uniswap/Pair.json
        # SushiSwap Contracts
        - name: SushiSwapRouter
          file: ./abis/Prices/SushiSwap/Router.json
        - name: SushiSwapFactory
          file: ./abis/Prices/SushiSwap/Factory.json
        - name: SushiSwapPair
          file: ./abis/Prices/SushiSwap/Pair.json
        - name: CalculationsSushiSwap
          file: ./abis/Prices/Calculations/SushiSwap.json
      eventHandlers:
        - event: Deposit(indexed address,address,indexed address,uint256,indexed uint16)
          handler: handleDeposit
        - event: Withdraw(indexed address,indexed address,indexed address,uint256)
          handler: handleWithdraw
        - event: Borrow(indexed address,address,indexed address,uint256,uint256,uint256,indexed uint16)
          handler: handleBorrow
        - event: Repay(indexed address,indexed address,indexed address,uint256)
          handler: handleRepay
        - event: LiquidationCall(indexed address,indexed address,indexed address,uint256,uint256,address,bool)
          handler: handleLiquidate
